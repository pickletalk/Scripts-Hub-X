-- ============================================================================
-- || Scripts Hub X - Steal A Clown Edition                                  ||
-- || Made by PickleTalk and Mhicel                                          ||
-- || Discord: https://discord.gg/bpsNUH5sVb                                 ||
-- ============================================================================

-- Load The Library
local WindUI = loadstring(game:HttpGet("https://github.com/Footagesus/WindUI/releases/latest/download/main.lua"))()

-- Services
local Players = game:GetService("Players")
local ReplicatedStorage = game:GetService("ReplicatedStorage")
local RunService = game:GetService("RunService")
local UserInputService = game:GetService("UserInputService")
local Workspace = game:GetService("Workspace")

local LocalPlayer = Players.LocalPlayer

-- ========================================
-- STATE MANAGEMENT
-- ========================================
local States = {
    InstantStealEnabled = false,
    NoClipEnabled = false,
    AntiRagdollEnabled = false,
    FastInteractionEnabled = false,
    DesyncEnabled = false,
    GodModeEnabled = false,
    AntiVoidEnabled = false,
    InfJumpEnabled = false,
    SpeedEnabled = false,
    SpeedValue = 16,
    AutoLockEnabled = false,
    PlayerESPEnabled = false,
    BaseESPEnabled = false,
    BaseTimerESPEnabled = false,
    CurrentTheme = "Anime Dark",
    
    -- Runtime data
    PlayerPlotName = nil,
    StealRemote = nil,
    OriginalPosition = nil,
    AntiVoidPart = nil,
    ESPObjects = {},
    OriginalJumpPower = 50,
}

-- ========================================
-- THEMES (14 COLOR VARIATIONS)
-- ========================================
WindUI:AddTheme({
    Name = "Anime Dark",
    Accent = Color3.fromHex("#FF0F7B"),
    Dialog = Color3.fromHex("#161616"),
    Outline = Color3.fromHex("#FF0F7B"),
    Text = Color3.fromHex("#FFFFFF"),
    Placeholder = Color3.fromHex("#7a7a7a"),
    Background = Color3.fromHex("#101010"),
    Button = Color3.fromHex("#52525b"),
    Icon = Color3.fromHex("#FF0F7B")
})

WindUI:AddTheme({
    Name = "Anime Light",
    Accent = Color3.fromHex("#F89B29"),
    Dialog = Color3.fromHex("#f5f5f5"),
    Outline = Color3.fromHex("#F89B29"),
    Text = Color3.fromHex("#000000"),
    Placeholder = Color3.fromHex("#5a5a5a"),
    Background = Color3.fromHex("#ffffff"),
    Button = Color3.fromHex("#e5e5e5"),
    Icon = Color3.fromHex("#F89B29")
})

WindUI:AddTheme({
    Name = "Purple Dream",
    Accent = Color3.fromHex("#9333EA"),
    Dialog = Color3.fromHex("#1a1625"),
    Outline = Color3.fromHex("#A855F7"),
    Text = Color3.fromHex("#FFFFFF"),
    Placeholder = Color3.fromHex("#7a7a7a"),
    Background = Color3.fromHex("#0f0b16"),
    Button = Color3.fromHex("#4c2a6e"),
    Icon = Color3.fromHex("#C084FC")
})

WindUI:AddTheme({
    Name = "Ocean Blue",
    Accent = Color3.fromHex("#0EA5E9"),
    Dialog = Color3.fromHex("#161e28"),
    Outline = Color3.fromHex("#38BDF8"),
    Text = Color3.fromHex("#FFFFFF"),
    Placeholder = Color3.fromHex("#7a7a7a"),
    Background = Color3.fromHex("#0a1420"),
    Button = Color3.fromHex("#1e3a5f"),
    Icon = Color3.fromHex("#7DD3FC")
})

WindUI:AddTheme({
    Name = "Forest Green",
    Accent = Color3.fromHex("#10B981"),
    Dialog = Color3.fromHex("#16211c"),
    Outline = Color3.fromHex("#34D399"),
    Text = Color3.fromHex("#FFFFFF"),
    Placeholder = Color3.fromHex("#7a7a7a"),
    Background = Color3.fromHex("#0a1610"),
    Button = Color3.fromHex("#1e4d3a"),
    Icon = Color3.fromHex("#6EE7B7")
})

WindUI:AddTheme({
    Name = "Crimson Red",
    Accent = Color3.fromHex("#DC2626"),
    Dialog = Color3.fromHex("#211616"),
    Outline = Color3.fromHex("#EF4444"),
    Text = Color3.fromHex("#FFFFFF"),
    Placeholder = Color3.fromHex("#7a7a7a"),
    Background = Color3.fromHex("#180a0a"),
    Button = Color3.fromHex("#5f1e1e"),
    Icon = Color3.fromHex("#F87171")
})

WindUI:AddTheme({
    Name = "Sunset Orange",
    Accent = Color3.fromHex("#F97316"),
    Dialog = Color3.fromHex("#211a16"),
    Outline = Color3.fromHex("#FB923C"),
    Text = Color3.fromHex("#FFFFFF"),
    Placeholder = Color3.fromHex("#7a7a7a"),
    Background = Color3.fromHex("#18120a"),
    Button = Color3.fromHex("#5f371e"),
    Icon = Color3.fromHex("#FDBA74")
})

WindUI:AddTheme({
    Name = "Midnight Purple",
    Accent = Color3.fromHex("#7C3AED"),
    Dialog = Color3.fromHex("#1a1625"),
    Outline = Color3.fromHex("#8B5CF6"),
    Text = Color3.fromHex("#FFFFFF"),
    Placeholder = Color3.fromHex("#7a7a7a"),
    Background = Color3.fromHex("#0f0a18"),
    Button = Color3.fromHex("#3d2a5f"),
    Icon = Color3.fromHex("#A78BFA")
})

WindUI:AddTheme({
    Name = "Cyan Glow",
    Accent = Color3.fromHex("#06B6D4"),
    Dialog = Color3.fromHex("#162228"),
    Outline = Color3.fromHex("#22D3EE"),
    Text = Color3.fromHex("#FFFFFF"),
    Placeholder = Color3.fromHex("#7a7a7a"),
    Background = Color3.fromHex("#0a1418"),
    Button = Color3.fromHex("#1e4550"),
    Icon = Color3.fromHex("#67E8F9")
})

WindUI:AddTheme({
    Name = "Rose Pink",
    Accent = Color3.fromHex("#F43F5E"),
    Dialog = Color3.fromHex("#211619"),
    Outline = Color3.fromHex("#FB7185"),
    Text = Color3.fromHex("#FFFFFF"),
    Placeholder = Color3.fromHex("#7a7a7a"),
    Background = Color3.fromHex("#180a0f"),
    Button = Color3.fromHex("#5f1e2d"),
    Icon = Color3.fromHex("#FDA4AF")
})

WindUI:AddTheme({
    Name = "Golden Hour",
    Accent = Color3.fromHex("#FBBF24"),
    Dialog = Color3.fromHex("#21200f"),
    Outline = Color3.fromHex("#FCD34D"),
    Text = Color3.fromHex("#000000"),
    Placeholder = Color3.fromHex("#5a5a5a"),
    Background = Color3.fromHex("#1a1808"),
    Button = Color3.fromHex("#6b5a1e"),
    Icon = Color3.fromHex("#FDE68A")
})

WindUI:AddTheme({
    Name = "Neon Green",
    Accent = Color3.fromHex("#22C55E"),
    Dialog = Color3.fromHex("#162116"),
    Outline = Color3.fromHex("#4ADE80"),
    Text = Color3.fromHex("#FFFFFF"),
    Placeholder = Color3.fromHex("#7a7a7a"),
    Background = Color3.fromHex("#0a1610"),
    Button = Color3.fromHex("#1e5f2d"),
    Icon = Color3.fromHex("#86EFAC")
})

WindUI:AddTheme({
    Name = "Electric Blue",
    Accent = Color3.fromHex("#3B82F6"),
    Dialog = Color3.fromHex("#161c28"),
    Outline = Color3.fromHex("#60A5FA"),
    Text = Color3.fromHex("#FFFFFF"),
    Placeholder = Color3.fromHex("#7a7a7a"),
    Background = Color3.fromHex("#0a1220"),
    Button = Color3.fromHex("#1e3d6b"),
    Icon = Color3.fromHex("#93C5FD")
})

WindUI:AddTheme({
    Name = "Custom",
    Accent = Color3.fromHex("#FF0F7B"),
    Dialog = Color3.fromHex("#161616"),
    Outline = Color3.fromHex("#FF0F7B"),
    Text = Color3.fromHex("#FFFFFF"),
    Placeholder = Color3.fromHex("#7a7a7a"),
    Background = Color3.fromHex("#101010"),
    Button = Color3.fromHex("#52525b"),
    Icon = Color3.fromHex("#FF0F7B")
})

-- Set default theme
WindUI:SetTheme("Anime Dark")

-- ========================================
-- UTILITY FUNCTIONS
-- ========================================

-- Find player's plot
local function findPlayerPlot()
    local plotsFolder = Workspace:FindFirstChild("Plots")
    if not plotsFolder then return nil end
    
    for _, plot in pairs(plotsFolder:GetChildren()) do
        if plot:IsA("Model") then
            local plotSign = plot:FindFirstChild("PlotSign")
            if plotSign then
                local surfaceGui = plotSign:FindFirstChild("SurfaceGui")
                if surfaceGui then
                    local frame = surfaceGui:FindFirstChild("Frame")
                    if frame then
                        local textLabel = frame:FindFirstChild("TextLabel")
                        if textLabel and textLabel.Text:find(LocalPlayer.Name) then
                            return plot.Name
                        end
                    end
                end
            end
        end
    end
    return nil
end

-- Find steal remote
local function findStealRemote()
    local packagesFolder = ReplicatedStorage:WaitForChild("Packages")
    local netFolder = packagesFolder:WaitForChild("Net")
    
    for _, remote in pairs(netFolder:GetChildren()) do
        if remote:IsA("RemoteEvent") and remote.Name:match("^RE/") then
            return remote
        end
    end
    return nil
end

-- Desync functions
local function setNetworkOwnership(state)
    local character = LocalPlayer.Character
    local rootPart = character and character:FindFirstChild("HumanoidRootPart")

    if rootPart then
        if state then
            sethiddenproperty(rootPart, "NetworkOwnershipRule", Enum.NetworkOwnership.Manual)
        else
            sethiddenproperty(rootPart, "NetworkOwnershipRule", Enum.NetworkOwnership.Automatic)
        end
    end
end

-- Noclip function
local function setCharacterCollision(enabled)
    local character = LocalPlayer.Character
    if not character then return end
    
    for _, part in pairs(character:GetDescendants()) do
        if part:IsA("BasePart") then
            part.CanCollide = enabled
        end
    end
end

-- ========================================
-- CREATING WINDOW
-- ========================================
local Window = WindUI:CreateWindow({
    Title = "Steal A Clown SHX | Official",
    Icon = "sword",
    Author = "by PickleTalk and Mhicel",
    Folder = "Scripts Hub X",
    Transparent = true,
    Theme = "Anime Dark",
})

Window:ToggleTransparency(true)

-- CONFIG MANAGER
local ConfigManager = Window.ConfigManager
local myConfig = ConfigManager:CreateConfig("Scripts Hub X")

-- Edit Open Button
Window:EditOpenButton({
    Title = "Scripts Hub X | Official",
    Icon = "monitor",
    CornerRadius = UDim.new(0,16),
    StrokeThickness = 2,
    Color = ColorSequence.new(
        Color3.fromHex("FF0F7B"), 
        Color3.fromHex("F89B29")
    ),
    OnlyMobile = false,
    Enabled = true,
    Draggable = true,
})

-- ========================================
-- CREATE TABS
-- ========================================
local MainTab = Window:Tab({
    Title = "Main",
    Icon = "home",
})

local PlayerTab = Window:Tab({
    Title = "Player",
    Icon = "user",
})

local VisualTab = Window:Tab({
    Title = "Visual",
    Icon = "eye",
})

local CreditsTab = Window:Tab({
    Title = "Credits",
    Icon = "users",
})

local SettingsTab = Window:Tab({
    Title = "Settings",
    Icon = "settings",
})

-- ========================================
-- MAIN TAB ELEMENTS
-- ========================================

-- Instant Steal Toggle
local InstantStealToggle = MainTab:Toggle({
    Title = "Instant Steal",
    Desc = "Automatically teleports when stealing items",
    Icon = "zap",
    Default = false,
    Callback = function(state)
        States.InstantStealEnabled = state
        
        if state then
            -- Find player plot
            States.PlayerPlotName = findPlayerPlot()
            if not States.PlayerPlotName then
                WindUI:Notify({
                    Title = "Error",
                    Content = "Could not find your plot!",
                    Duration = 3,
                    Icon = "alert-circle",
                })
                return
            end
            
            -- Find steal remote
            States.StealRemote = findStealRemote()
            if not States.StealRemote then
                WindUI:Notify({
                    Title = "Error",
                    Content = "Could not find steal remote!",
                    Duration = 3,
                    Icon = "alert-circle",
                })
                return
            end
            
            -- Hook the remote
            States.StealRemote.OnClientEvent:Connect(function(...)
                local args = {...}
                if #args >= 3 and States.InstantStealEnabled then
                    local character = LocalPlayer.Character
                    local rootPart = character and character:FindFirstChild("HumanoidRootPart")
                    
                    if rootPart and States.PlayerPlotName then
                        States.OriginalPosition = rootPart.CFrame
                        
                        local plot = Workspace.Plots:FindFirstChild(States.PlayerPlotName)
                        if plot then
                            local deliveryHitbox = plot:FindFirstChild("DeliveryHitbox")
                            if deliveryHitbox then
                                rootPart.CFrame = deliveryHitbox.CFrame
                                wait(0.1)
                                rootPart.CFrame = States.OriginalPosition
                            end
                        end
                    end
                end
            end)
            
            WindUI:Notify({
                Title = "Instant Steal Enabled",
                Content = "Will teleport when stealing items",
                Duration = 3,
                Icon = "check",
            })
        else
            WindUI:Notify({
                Title = "Instant Steal Disabled",
                Content = "Normal stealing mode",
                Duration = 3,
                Icon = "x",
            })
        end
    end
})

-- Fast Interaction Toggle
local FastInteractionToggle = MainTab:Toggle({
    Title = "Fast Interaction",
    Desc = "Instant proximity prompts",
    Icon = "hand",
    Default = false,
    Callback = function(state)
        States.FastInteractionEnabled = state
        
        if state then
            WindUI:Notify({
                Title = "Fast Interaction Enabled",
                Content = "All interactions are now instant",
                Duration = 3,
                Icon = "check",
            })
        else
            WindUI:Notify({
                Title = "Fast Interaction Disabled",
                Content = "Normal interaction speed",
                Duration = 3,
                Icon = "x",
            })
        end
    end
})

-- Desync Toggle (Creates separate UI)
local DesyncButton = MainTab:Button({
    Title = "Open Desync UI",
    Desc = "Opens draggable desync control",
    Icon = "shield",
    Callback = function()
        -- Create desync UI if it doesn't exist
        if not LocalPlayer.PlayerGui:FindFirstChild("DesyncUI") then
            local screenGui = Instance.new("ScreenGui")
            screenGui.Name = "DesyncUI"
            screenGui.ResetOnSpawn = false
            screenGui.Parent = LocalPlayer.PlayerGui
            
            local frame = Instance.new("Frame")
            frame.Size = UDim2.new(0, 150, 0, 50)
            frame.Position = UDim2.new(0.5, -75, 0.1, 0)
            frame.BackgroundColor3 = Color3.fromRGB(22, 22, 22)
            frame.BorderSizePixel = 0
            frame.Parent = screenGui
            
            local uiCorner = Instance.new("UICorner")
            uiCorner.CornerRadius = UDim.new(0, 8)
            uiCorner.Parent = frame
            
            local button = Instance.new("TextButton")
            button.Size = UDim2.new(1, -10, 1, -10)
            button.Position = UDim2.new(0, 5, 0, 5)
            button.BackgroundColor3 = Color3.fromRGB(82, 82, 91)
            button.Text = "Desync: OFF"
            button.TextColor3 = Color3.new(1, 1, 1)
            button.TextSize = 14
            button.Font = Enum.Font.GothamBold
            button.BorderSizePixel = 0
            button.Parent = frame
            
            local buttonCorner = Instance.new("UICorner")
            buttonCorner.CornerRadius = UDim.new(0, 6)
            buttonCorner.Parent = button
            
            -- Make draggable
            local dragging = false
            local dragInput, mousePos, framePos
            
            frame.InputBegan:Connect(function(input)
                if input.UserInputType == Enum.UserInputType.MouseButton1 then
                    dragging = true
                    mousePos = input.Position
                    framePos = frame.Position
                    
                    input.Changed:Connect(function()
                        if input.UserInputState == Enum.UserInputState.End then
                            dragging = false
                        end
                    end)
                end
            end)
            
            frame.InputChanged:Connect(function(input)
                if input.UserInputType == Enum.UserInputType.MouseMovement then
                    dragInput = input
                end
            end)
            
            UserInputService.InputChanged:Connect(function(input)
                if input == dragInput and dragging then
                    local delta = input.Position - mousePos
                    frame.Position = UDim2.new(
                        framePos.X.Scale,
                        framePos.X.Offset + delta.X,
                        framePos.Y.Scale,
                        framePos.Y.Offset + delta.Y
                    )
                end
            end)
            
            -- Toggle desync
            button.MouseButton1Click:Connect(function()
                States.DesyncEnabled = not States.DesyncEnabled
                setNetworkOwnership(States.DesyncEnabled)
                
                if States.DesyncEnabled then
                    button.Text = "Desync: ON"
                    button.BackgroundColor3 = Color3.fromRGB(34, 197, 94)
                    WindUI:Notify({
                        Title = "Desync Enabled",
                        Content = "You are now desynced from server",
                        Duration = 3,
                        Icon = "shield",
                    })
                else
                    button.Text = "Desync: OFF"
                    button.BackgroundColor3 = Color3.fromRGB(82, 82, 91)
                    WindUI:Notify({
                        Title = "Desync Disabled",
                        Content = "You are now synced with server",
                        Duration = 3,
                        Icon = "shield-off",
                    })
                end
            end)
        end
        
        WindUI:Notify({
            Title = "Desync UI",
            Content = "Desync control opened",
            Duration = 3,
            Icon = "check",
        })
    end
})

-- Auto Lock Toggle
local AutoLockToggle = MainTab:Toggle({
    Title = "Auto Lock Plot",
    Desc = "Automatically locks your plot when timer hits 0s",
    Icon = "lock",
    Default = false,
    Callback = function(state)
        States.AutoLockEnabled = state
        
        if state then
            WindUI:Notify({
                Title = "Auto Lock Enabled",
                Content = "Will auto-lock plot at 0s",
                Duration = 3,
                Icon = "check",
            })
        else
            WindUI:Notify({
                Title = "Auto Lock Disabled",
                Content = "Manual locking only",
                Duration = 3,
                Icon = "x",
            })
        end
    end
})

myConfig:Register("InstantSteal", InstantStealToggle)
myConfig:Register("FastInteraction", FastInteractionToggle)
myConfig:Register("AutoLock", AutoLockToggle)

-- ========================================
-- PLAYER TAB ELEMENTS
-- ========================================

-- Noclip Toggle
local NoclipToggle = PlayerTab:Toggle({
    Title = "Noclip",
    Desc = "Walk through walls",
    Icon = "ghost",
    Default = false,
    Callback = function(state)
        States.NoClipEnabled = state
        setCharacterCollision(not state)
        
        if state then
            WindUI:Notify({
                Title = "Noclip Enabled",
                Content = "You can now walk through walls",
                Duration = 3,
                Icon = "check",
            })
        else
            WindUI:Notify({
                Title = "Noclip Disabled",
                Content = "Normal collision restored",
                Duration = 3,
                Icon = "x",
            })
        end
    end
})

-- Anti Ragdoll Toggle
local AntiRagdollToggle = PlayerTab:Toggle({
    Title = "Anti Ragdoll",
    Desc = "Prevents ragdoll effects",
    Icon = "user-x",
    Default = false,
    Callback = function(state)
        States.AntiRagdollEnabled = state
        
        local character = LocalPlayer.Character
        if character then
            local humanoid = character:FindFirstChildOfClass("Humanoid")
            if humanoid then
                if state then
                    humanoid:SetStateEnabled(Enum.HumanoidStateType.FallingDown, false)
                    humanoid:SetStateEnabled(Enum.HumanoidStateType.Ragdoll, false)
                else
                    humanoid:SetStateEnabled(Enum.HumanoidStateType.FallingDown, true)
                    humanoid:SetStateEnabled(Enum.HumanoidStateType.Ragdoll, true)
                end
            end
        end
        
        if state then
            WindUI:Notify({
                Title = "Anti Ragdoll Enabled",
                Content = "Ragdoll prevention active",
                Duration = 3,
                Icon = "check",
            })
        else
            WindUI:Notify({
                Title = "Anti Ragdoll Disabled",
                Content = "Normal ragdoll physics",
                Duration = 3,
                Icon = "x",
            })
        end
    end
})

-- God Mode Toggle
local GodModeToggle = PlayerTab:Toggle({
    Title = "God Mode",
    Desc = "Become invincible",
    Icon = "shield-check",
    Default = false,
    Callback = function(state)
        States.GodModeEnabled = state
        
        local character = LocalPlayer.Character
        if character then
            local humanoid = character:FindFirstChildOfClass("Humanoid")
            if humanoid then
                if state then
                    humanoid.MaxHealth = math.huge
                    humanoid.Health = math.huge
                else
                    humanoid.MaxHealth = 100
                    humanoid.Health = 100
                end
            end
        end
        
        if state then
            WindUI:Notify({
                Title = "God Mode Enabled",
                Content = "You are now invincible",
                Duration = 3,
                Icon = "check",
            })
        else
            WindUI:Notify({
                Title = "God Mode Disabled",
                Content = "Normal health restored",
                Duration = 3,
                Icon = "x",
            })
        end
    end
})

-- Anti Void Toggle
local AntiVoidToggle = PlayerTab:Toggle({
    Title = "Anti Void",
    Desc = "Creates invisible platform below you",
    Icon = "square",
    Default = false,
    Callback = function(state)
        States.AntiVoidEnabled = state
        
        if state then
            if not States.AntiVoidPart then
                local part = Instance.new("Part")
                part.Size = Vector3.new(200, 1, 200)
                part.Anchored = true
                part.Transparency = 1
                part.CanCollide = true
                part.Name = "AntiVoidPlatform"
                
                local character = LocalPlayer.Character
                local rootPart = character and character:FindFirstChild("HumanoidRootPart")
                if rootPart then
                    part.Position = rootPart.Position - Vector3.new(0, 15, 0)
                end
                
                part.Parent = Workspace
                States.AntiVoidPart = part
            end
            
            WindUI:Notify({
                Title = "Anti Void Enabled",
                Content = "Invisible platform created",
                Duration = 3,
                Icon = "check",
            })
        else
            if States.AntiVoidPart then
                States.AntiVoidPart:Destroy()
                States.AntiVoidPart = nil
            end
            
            WindUI:Notify({
                Title = "Anti Void Disabled",
                Content = "Platform removed",
                Duration = 3,
                Icon = "x",
            })
        end
    end
})

-- Infinite Jump Toggle
local InfJumpToggle = PlayerTab:Toggle({
    Title = "Infinite Jump",
    Desc = "Jump infinitely in the air",
    Icon = "arrow-up",
    Default = false,
    Callback = function(state)
        States.InfJumpEnabled = state
        
        if state then
            -- Store original jump power
            local character = LocalPlayer.Character
            if character then
                local humanoid = character:FindFirstChildOfClass("Humanoid")
                if humanoid then
                    States.OriginalJumpPower = humanoid.JumpPower
                end
            end
            
            WindUI:Notify({
                Title = "Infinite Jump Enabled",
                Content = "Press space to jump infinitely",
                Duration = 3,
                Icon = "check",
            })
        else
            WindUI:Notify({
                Title = "Infinite Jump Disabled",
                Content = "Normal jumping restored",
                Duration = 3,
                Icon = "x",
            })
        end
    end
})

-- Speed Toggle and Slider
local SpeedSlider = PlayerTab:Slider({
    Title = "Speed Value",
    Step = 1,
    Value = {
        Min = 16,
        Max = 100,
        Default = 16,
    },
    Callback = function(value)
        States.SpeedValue = value
        if States.SpeedEnabled then
            local character = LocalPlayer.Character
            if character then
                local humanoid = character:FindFirstChildOfClass("Humanoid")
                if humanoid then
                    humanoid.WalkSpeed = value
                end
            end
        end
    end
})

local SpeedToggle = PlayerTab:Toggle({
    Title = "Speed",
    Desc = "Adjust your walking speed",
    Icon = "gauge",
    Default = false,
    Callback = function(state)
        States.SpeedEnabled = state
        
        local character = LocalPlayer.Character
        if character then
            local humanoid = character:FindFirstChildOfClass("Humanoid")
            if humanoid then
                if state then
                    humanoid.WalkSpeed = States.SpeedValue
                    WindUI:Notify({
                        Title = "Speed Enabled",
                        Content = "Speed set to " .. States.SpeedValue,
                        Duration = 3,
                        Icon = "check",
                    })
                else
                    humanoid.WalkSpeed = 16
                    WindUI:Notify({
                        Title = "Speed Disabled",
                        Content = "Normal speed restored",
                        Duration = 3,
                        Icon = "x",
                    })
                end
            end
        end
    end
})

myConfig:Register("Noclip", NoclipToggle)
myConfig:Register("AntiRagdoll", AntiRagdollToggle)
myConfig:Register("GodMode", GodModeToggle)
myConfig:Register("AntiVoid", AntiVoidToggle)
myConfig:Register("InfJump", InfJumpToggle)
myConfig:Register("Speed", SpeedToggle)
myConfig:Register("SpeedValue", SpeedSlider)

-- ========================================
-- VISUAL TAB ELEMENTS
-- ========================================

-- Player ESP Toggle
local PlayerESPToggle = VisualTab:Toggle({
    Title = "Player ESP",
    Desc = "Shows player outlines and names",
    Icon = "users",
    Default = false,
    Callback = function(state)
        States.PlayerESPEnabled = state
        
        if state then
            for _, player in pairs(Players:GetPlayers()) do
                if player ~= LocalPlayer then
                    local character = player.Character
                    if character then
                        local humanoidRootPart = character:FindFirstChild("HumanoidRootPart")
                        if humanoidRootPart then
                            -- Create highlight
                            local highlight = Instance.new("Highlight")
                            highlight.Name = "PlayerESP"
                            highlight.FillColor = Color3.fromRGB(255, 0, 123)
                            highlight.OutlineColor = Color3.fromRGB(255, 255, 255)
                            highlight.Parent = character
                            
                            -- Create name tag
                            local billboardGui = Instance.new("BillboardGui")
                            billboardGui.Name = "NameESP"
                            billboardGui.Size = UDim2.new(0, 100, 0, 20)
                            billboardGui.StudsOffset = Vector3.new(0, 3, 0)
                            billboardGui.AlwaysOnTop = true
                            billboardGui.Parent = humanoidRootPart
                            
                            local textLabel = Instance.new("TextLabel")
                            textLabel.Size = UDim2.new(1, 0, 1, 0)
                            textLabel.Text = player.Name
                            textLabel.TextColor3 = Color3.new(1, 1, 1)
                            textLabel.TextSize = 12
                            textLabel.Font = Enum.Font.GothamBold
                            textLabel.BackgroundTransparency = 1
                            textLabel.Parent = billboardGui
                            
                            table.insert(States.ESPObjects, {highlight, billboardGui})
                        end
                    end
                end
            end
            
            WindUI:Notify({
                Title = "Player ESP Enabled",
                Content = "All players are now visible",
                Duration = 3,
                Icon = "check",
            })
        else
            for _, espObject in pairs(States.ESPObjects) do
                for _, obj in pairs(espObject) do
                    if obj then
                        obj:Destroy()
                    end
                end
            end
            States.ESPObjects = {}
            
            WindUI:Notify({
                Title = "Player ESP Disabled",
                Content = "ESP removed",
                Duration = 3,
                Icon = "x",
            })
        end
    end
})

-- Base ESP Toggle
local BaseESPToggle = VisualTab:Toggle({
    Title = "Base ESP",
    Desc = "Shows all plot signs",
    Icon = "home",
    Default = false,
    Callback = function(state)
        States.BaseESPEnabled = state
        
        if state then
            local plotsFolder = Workspace:FindFirstChild("Plots")
            if plotsFolder then
                for _, plot in pairs(plotsFolder:GetChildren()) do
                    local plotSign = plot:FindFirstChild("PlotSign")
                    if plotSign then
                        local highlight = Instance.new("Highlight")
                        highlight.Name = "BaseESP"
                        highlight.FillColor = Color3.fromRGB(0, 255, 0)
                        highlight.OutlineColor = Color3.fromRGB(255, 255, 255)
                        highlight.Parent = plotSign
                        
                        table.insert(States.ESPObjects, {highlight})
                    end
                end
            end
            
            WindUI:Notify({
                Title = "Base ESP Enabled",
                Content = "All bases are now visible",
                Duration = 3,
                Icon = "check",
            })
        else
            for _, espObject in pairs(States.ESPObjects) do
                for _, obj in pairs(espObject) do
                    if obj and obj.Name == "BaseESP" then
                        obj:Destroy()
                    end
                end
            end
            
            WindUI:Notify({
                Title = "Base ESP Disabled",
                Content = "Base ESP removed",
                Duration = 3,
                Icon = "x",
            })
        end
    end
})

-- Base Timer ESP Toggle (Creates UI)
local BaseTimerESPToggle = VisualTab:Toggle({
    Title = "Base Timer ESP",
    Desc = "Shows your base remaining time",
    Icon = "clock",
    Default = false,
    Callback = function(state)
        States.BaseTimerESPEnabled = state
        
        if state then
            -- Create timer UI
            if not LocalPlayer.PlayerGui:FindFirstChild("BaseTimerUI") then
                local screenGui = Instance.new("ScreenGui")
                screenGui.Name = "BaseTimerUI"
                screenGui.ResetOnSpawn = false
                screenGui.Parent = LocalPlayer.PlayerGui
                
                local frame = Instance.new("Frame")
                frame.Size = UDim2.new(0, 250, 0, 80)
                frame.Position = UDim2.new(0.5, -125, 0.85, 0)
                frame.BackgroundColor3 = Color3.fromRGB(22, 22, 22)
                frame.BorderSizePixel = 0
                frame.Parent = screenGui
                
                local uiCorner = Instance.new("UICorner")
                uiCorner.CornerRadius = UDim.new(0, 12)
                uiCorner.Parent = frame
                
                local title = Instance.new("TextLabel")
                title.Size = UDim2.new(1, -20, 0, 25)
                title.Position = UDim2.new(0, 10, 0, 10)
                title.Text = "Base Remaining Timer Esp"
                title.TextColor3 = Color3.new(1, 1, 1)
                title.TextSize = 14
                title.Font = Enum.Font.GothamBold
                title.BackgroundTransparency = 1
                title.TextXAlignment = Enum.TextXAlignment.Left
                title.Parent = frame
                
                local timeLabel = Instance.new("TextLabel")
                timeLabel.Name = "TimeLabel"
                timeLabel.Size = UDim2.new(1, -20, 0, 30)
                timeLabel.Position = UDim2.new(0, 10, 0, 40)
                timeLabel.Text = "Remaining Time: --"
                timeLabel.TextColor3 = Color3.new(1, 1, 1)
                timeLabel.TextSize = 18
                timeLabel.Font = Enum.Font.GothamBold
                timeLabel.BackgroundTransparency = 1
                timeLabel.TextXAlignment = Enum.TextXAlignment.Center
                timeLabel.Parent = frame
            end
            
            WindUI:Notify({
                Title = "Base Timer ESP Enabled",
                Content = "Showing your base timer",
                Duration = 3,
                Icon = "check",
            })
        else
            local timerUI = LocalPlayer.PlayerGui:FindFirstChild("BaseTimerUI")
            if timerUI then
                timerUI:Destroy()
            end
            
            WindUI:Notify({
                Title = "Base Timer ESP Disabled",
                Content = "Timer ESP removed",
                Duration = 3,
                Icon = "x",
            })
        end
    end
})

myConfig:Register("PlayerESP", PlayerESPToggle)
myConfig:Register("BaseESP", BaseESPToggle)
myConfig:Register("BaseTimerESP", BaseTimerESPToggle)

-- ========================================
-- CREDITS TAB ELEMENTS
-- ========================================

local CreditsParagraph = CreditsTab:Paragraph({
    Title = "Scripts Hub X | Official",
    Desc = "Made by PickleTalk and Mhicel. Join our discord server to be always updated with the latest features and scripts!",
    Color = "Red",
    Thumbnail = "rbxassetid://74135635728836",
    ThumbnailSize = 140,
    Buttons = {
        {
            Icon = "users",
            Title = "Discord",
            Callback = function()
                setclipboard("https://discord.gg/bpsNUH5sVb")
                WindUI:Notify({
                    Title = "Discord Link Copied!",
                    Content = "Discord invite link copied to clipboard!",
                    Duration = 3,
                    Icon = "check",
                })
            end,
        }
    }
})

-- ========================================
-- SETTINGS TAB ELEMENTS
-- ========================================

local function saveConfiguration()
    myConfig:Save()
    WindUI:Notify({
        Title = "Configuration Saved",
        Content = "All settings have been saved successfully",
        Duration = 3,
        Icon = "check",
    })
end

local function loadConfiguration()
    myConfig:Load()
    WindUI:Notify({
        Title = "Configuration Loaded",
        Content = "All settings have been loaded successfully",
        Duration = 3,
        Icon = "check",
    })
end

local function changeTheme(themeName)
    WindUI:SetTheme(themeName)
    States.CurrentTheme = themeName
    WindUI:Notify({
        Title = "Theme Changed",
        Content = "Theme set to " .. themeName,
        Duration = 3,
        Icon = "palette",
    })
end

local SaveConfigButton = SettingsTab:Button({
    Title = "Save Configuration",
    Desc = "Save all current settings to file",
    Icon = "save",
    Callback = function()
        saveConfiguration()
    end
})

local LoadConfigButton = SettingsTab:Button({
    Title = "Load Configuration",
    Desc = "Load your saved settings from file",
    Icon = "folder-open",
    Callback = function()
        loadConfiguration()
    end
})

local ThemeDropdown = SettingsTab:Dropdown({
    Title = "Theme Selector",
    Values = {
        {Title = "Anime Dark", Icon = "moon"},
        {Title = "Anime Light", Icon = "sun"},
        {Title = "Purple Dream", Icon = "sparkles"},
        {Title = "Ocean Blue", Icon = "waves"},
        {Title = "Forest Green", Icon = "tree-deciduous"},
        {Title = "Crimson Red", Icon = "flame"},
        {Title = "Sunset Orange", Icon = "sunset"},
        {Title = "Midnight Purple", Icon = "moon-star"},
        {Title = "Cyan Glow", Icon = "zap"},
        {Title = "Rose Pink", Icon = "heart"},
        {Title = "Golden Hour", Icon = "sun"},
        {Title = "Neon Green", Icon = "zap-off"},
        {Title = "Electric Blue", Icon = "sparkle"},
        {Title = "Custom", Icon = "palette"},
    },
    Value = "Anime Dark",
    Callback = function(option)
        changeTheme(option.Title)
    end
})

local ThemeColorPicker = SettingsTab:Colorpicker({
    Title = "Custom Theme Color",
    Desc = "Select a custom accent color for the UI",
    Default = Color3.fromRGB(255, 15, 123),
    Callback = function(color)
        WindUI:AddTheme({
            Name = "Custom",
            Accent = color,
            Dialog = Color3.fromHex("#161616"),
            Outline = color,
            Text = Color3.fromHex("#FFFFFF"),
            Placeholder = Color3.fromHex("#7a7a7a"),
            Background = Color3.fromHex("#101010"),
            Button = Color3.fromHex("#52525b"),
            Icon = color
        })
        
        WindUI:SetTheme("Custom")
        States.CurrentTheme = "Custom"
    end
})

myConfig:Register("Theme", ThemeDropdown)
myConfig:Register("ThemeColor", ThemeColorPicker)

-- ========================================
-- WELCOME POPUP
-- ========================================
WindUI:Popup({
    Title = "Steal A Clown Hub v1.4",
    Icon = "sword",
    Content = "New Update: Added Instant Steal, Desync, Auto Lock, Player ESP, Base ESP, and more features!",
    Buttons = {
        {
            Title = "Close",
            Callback = function() end,
            Variant = "Tertiary",
        },
        {
            Title = "Join Discord",
            Icon = "users",
            Callback = function()
                setclipboard("https://discord.gg/bpsNUH5sVb")
                WindUI:Notify({
                    Title = "Link Copied!",
                    Content = "Discord invite copied to clipboard!",
                    Duration = 3,
                    Icon = "check",
                })
            end,
            Variant = "Primary",
        }
    }
})

-- ========================================
-- RUNTIME LOOPS
-- ========================================

-- Fast Interaction Loop
spawn(function()
    while wait(0.5) do
        if States.FastInteractionEnabled then
            for _, prompt in ipairs(Workspace:GetDescendants()) do
                if prompt:IsA("ProximityPrompt") then
                    prompt.HoldDuration = 0
                    prompt.MaxActivationDistance = 25
                end
            end
        end
    end
end)

-- Auto Lock Loop
spawn(function()
    while wait(1) do
        if States.AutoLockEnabled and States.PlayerPlotName then
            local plot = Workspace.Plots:FindFirstChild(States.PlayerPlotName)
            if plot then
                local purchases = plot:FindFirstChild("Purchases")
                if purchases then
                    local plotBlock = purchases:FindFirstChild("PlotBlock")
                    if plotBlock then
                        local main = plotBlock:FindFirstChild("Main")
                        if main then
                            local billboard = main:FindFirstChild("BillboardGui")
                            if billboard then
                                local remainingTime = billboard:FindFirstChild("RemainingTime")
                                if remainingTime and remainingTime.Text == "0s" then
                                    local hitbox = plotBlock:FindFirstChild("Hitbox")
                                    if hitbox and hitbox:FindFirstChild("TouchInterest") then
                                        firetouchinterest(LocalPlayer.Character.HumanoidRootPart, hitbox, 0)
                                        wait(0.1)
                                        firetouchinterest(LocalPlayer.Character.HumanoidRootPart, hitbox, 1)
                                    end
                                end
                            end
                        end
                    end
                end
            end
        end
    end
end)

-- Base Timer ESP Update Loop
spawn(function()
    while wait(0.5) do
        if States.BaseTimerESPEnabled then
            local timerUI = LocalPlayer.PlayerGui:FindFirstChild("BaseTimerUI")
            if timerUI and States.PlayerPlotName then
                local plot = Workspace.Plots:FindFirstChild(States.PlayerPlotName)
                if plot then
                    local purchases = plot:FindFirstChild("Purchases")
                    if purchases then
                        local plotBlock = purchases:FindFirstChild("PlotBlock")
                        if plotBlock then
                            local main = plotBlock:FindFirstChild("Main")
                            if main then
                                local billboard = main:FindFirstChild("BillboardGui")
                                if billboard then
                                    local remainingTime = billboard:FindFirstChild("RemainingTime")
                                    if remainingTime then
                                        local timeLabel = timerUI.Frame:FindFirstChild("TimeLabel")
                                        if timeLabel then
                                            timeLabel.Text = "Remaining Time: " .. remainingTime.Text
                                            
                                            -- Color coding
                                            local timeValue = tonumber(remainingTime.Text:match("%d+"))
                                            if timeValue then
                                                if timeValue == 0 then
                                                    timeLabel.TextColor3 = Color3.fromRGB(34, 197, 94) -- Green
                                                elseif timeValue <= 5 then
                                                    timeLabel.TextColor3 = Color3.fromRGB(234, 179, 8) -- Yellow
                                                elseif timeValue <= 10 then
                                                    timeLabel.TextColor3 = Color3.fromRGB(234, 179, 8) -- Yellow
                                                else
                                                    timeLabel.TextColor3 = Color3.fromRGB(239, 68, 68) -- Red
                                                end
                                            end
                                        end
                                    end
                                end
                            end
                        end
                    end
                end
            end
        end
    end
end)

-- Noclip Loop
spawn(function()
    while wait(0.1) do
        if States.NoClipEnabled then
            setCharacterCollision(false)
        end
    end
end)

-- Infinite Jump Handler
UserInputService.JumpRequest:Connect(function()
    if States.InfJumpEnabled then
        local character = LocalPlayer.Character
        if character then
            local humanoid = character:FindFirstChildOfClass("Humanoid")
            if humanoid then
                humanoid:ChangeState(Enum.HumanoidStateType.Jumping)
                humanoid.JumpPower = States.OriginalJumpPower
            end
        end
    end
end)

-- Character Respawn Handler
LocalPlayer.CharacterAdded:Connect(function(newCharacter)
    wait(1)
    
    -- Reapply Noclip
    if States.NoClipEnabled then
        setCharacterCollision(false)
        WindUI:Notify({
            Title = "Noclip Re-applied",
            Content = "Noclip was re-applied on respawn",
            Duration = 3,
            Icon = "ghost",
        })
    end
    
    -- Reapply Desync
    if States.DesyncEnabled then
        setNetworkOwnership(true)
        WindUI:Notify({
            Title = "Desync Re-applied",
            Content = "Desync was re-applied on respawn",
            Duration = 3,
            Icon = "shield",
        })
    end
    
    -- Reapply Anti Ragdoll
    if States.AntiRagdollEnabled then
        local humanoid = newCharacter:WaitForChild("Humanoid")
        humanoid:SetStateEnabled(Enum.HumanoidStateType.FallingDown, false)
        humanoid:SetStateEnabled(Enum.HumanoidStateType.Ragdoll, false)
    end
    
    -- Reapply God Mode
    if States.GodModeEnabled then
        local humanoid = newCharacter:WaitForChild("Humanoid")
        humanoid.MaxHealth = math.huge
        humanoid.Health = math.huge
    end
    
    -- Reapply Speed
    if States.SpeedEnabled then
        local humanoid = newCharacter:WaitForChild("Humanoid")
        humanoid.WalkSpeed = States.SpeedValue
    end
    
    -- Store jump power
    local humanoid = newCharacter:WaitForChild("Humanoid")
    States.OriginalJumpPower = humanoid.JumpPower
    
    -- Update player plot
    task.wait(2)
    States.PlayerPlotName = findPlayerPlot()
end)

-- Initial setup
States.PlayerPlotName = findPlayerPlot()
if States.PlayerPlotName then
    WindUI:Notify({
        Title = "Plot Found",
        Content = "Your plot has been located!",
        Duration = 3,
        Icon = "home",
    })
end

print("Scripts Hub X - Steal A Clown loaded successfully!")
print("Made by PickleTalk and Mhicel")
print("Discord: https://discord.gg/bpsNUH5sVb")